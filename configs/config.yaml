# SMS Spam Detection Project Configuration

# Data Configuration
data:
  dataset_url: "https://raw.githubusercontent.com/uciml/sms-spam-collection-dataset/master/SMSSpamCollection"
  data_path: "sms_spam_detector/data/raw/sms_spam_enhanced.tsv"
  test_size: 0.2
  random_state: 42

# Baseline Model Configuration
baseline:
  model_name: "tfidf_logistic"
  max_features: 8000
  ngram_range: [1, 3]
  min_df: 1
  max_df: 0.90
  C: 10.0
  max_iter: 2000
  solver: "liblinear"
  model_path: "models/baseline_model.pkl"
  vectorizer_path: "models/tfidf_vectorizer.pkl"

# DistilBERT Model Configuration
distilbert:
  model_name: "distilbert-base-uncased"
  num_labels: 2
  max_length: 128
  batch_size: 8  # Reducir batch size para mejor convergencia
  learning_rate: 5e-5  # Learning rate más alto para dataset pequeño
  num_epochs: 10  # Más épocas para mejor entrenamiento
  warmup_steps: 100  # Menos warmup steps
  weight_decay: 0.01
  model_path: "models/distilbert_spam_classifier"
  tokenizer_path: "models/distilbert_tokenizer"

# Training Configuration
training:
  save_steps: 50  # Guardar más frecuentemente
  eval_steps: 50  # Evaluar más frecuentemente
  logging_steps: 10  # Log más frecuente
  evaluation_strategy: "steps"
  save_strategy: "steps"
  load_best_model_at_end: True
  metric_for_best_model: "f1"

# Evaluation Configuration
evaluation:
  target_f1_score: 0.95
  metrics: ["accuracy", "precision", "recall", "f1"]
  
# Streamlit App Configuration
app:
  title: "SMS Spam Detector"
  description: "Detecta si un mensaje SMS es spam o no usando modelos de machine learning"
  max_input_length: 500

# Model Selection
model_selection:
  use_best_model: True  # If True, automatically select the best performing model
  
# Paths
paths:
  data_dir: "sms_spam_detector/data/processed"
  models_dir: "sms_spam_detector/models/trained"
  logs_dir: "logs_old"
  results_dir: "results_old"
